name: PR Preview (Cloudflare Workers)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [closed]

concurrency:
  group: pr-preview-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      deployments: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build site (Astro)
        run: npm run build

      - name: Install Wrangler CLI
        run: npm i -g wrangler@4

      - name: Deploy preview to Cloudflare Workers
        id: deploy
        run: |
          NAME="knots-pr-${{ github.event.pull_request.number }}"
          echo "worker_name=$NAME" >> "$GITHUB_OUTPUT"
          # Deploy static assets from dist using wrangler.jsonc
          wrangler deploy --name "$NAME" --config wrangler.jsonc --assets dist | tee deploy.log
          # Try to determine workers.dev subdomain
          SUBDOMAIN=$(wrangler subdomain 2>&1 | grep -Eo '[a-z0-9-]+\.workers\.dev' | head -n1 | sed 's/\.workers\.dev//' || true)
          if [ -n "$SUBDOMAIN" ]; then
            URL="https://$NAME.$SUBDOMAIN.workers.dev"
          else
            # Fallback: parse from deploy output if present
            URL=$(grep -Eo 'https://[a-zA-Z0-9.-]*workers\.dev' deploy.log | head -n1 || true)
          fi
          if [ -n "$URL" ]; then
            echo "url=$URL" >> "$GITHUB_OUTPUT"
            echo "Preview URL: $URL"
          else
            echo "Preview URL not found. Ensure your account has a workers.dev subdomain configured." >&2
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Comment preview URL on PR
        if: ${{ github.event.action != 'closed' && steps.deploy.outputs.url != '' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = process.env.URL || process.env.url || '';
            const body = `Preview is ready: ${url}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
        env:
          URL: ${{ steps.deploy.outputs.url }}

  cleanup-preview:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    # pull_request_target gives us access to secrets on forks while avoiding checking out PR code
    permissions:
      contents: read
    steps:
      - name: Install Wrangler CLI
        run: npm i -g wrangler@4
      - name: Show existing Workers (debug)
        run: wrangler list || true
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Delete preview Worker for this PR
        run: |
          NAME="knots-pr-${{ github.event.pull_request.number }}"
          echo "Deleting $NAME"
          # Try non-interactive delete first; fallback to piping confirmation
          wrangler delete --name "$NAME" --config wrangler.jsonc --force || \
          wrangler delete --name "$NAME" --config wrangler.jsonc -y || \
          yes | wrangler delete --name "$NAME" --config wrangler.jsonc || true
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Verify deletion (debug)
        run: wrangler list | grep -F "knots-pr-" || echo "No preview workers remain"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
