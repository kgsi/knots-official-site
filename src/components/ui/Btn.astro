---
const { href, txt, modifier=null } = Astro.props

const ExLink = ({ href }: { href: string }) => {
  const isExternal = href.startsWith('http://') || href.startsWith('https://') || /\.[a-zA-Z0-9]{2,}$/.test(href);
  return isExternal ? '_blank' : undefined;
};
---

<a href={href} class={`btn${modifier ? ` btn--${modifier}` : ''}`} target={ExLink({ href })}>
  {txt && txt}
  <span class="icon-arrow"></span>
</a>

<style>
  @layer components {
    .btn {
      --this_bg: var(--color_white);
      --this_color: var(--color_primary);
      --this_hover_transition: var(--transition_hover);
      background-color: var(--this_bg);
      color: var(--this_color);
      min-width: var(--this_base_width, 290px);
      min-height: var(--this_base_height, 66px);
      border: 1px solid var(--color_primary);
      display: inline-flex;
      align-items: center;
      justify-content: center;
      border-radius: 9999px;
      font-size: rem(18);
      font-weight: 700;
      font-feature-settings: 'palt' on;
      letter-spacing: 0.02em;
      transition: background-color var(--this_hover_transition, 0.3s ease), color var(--this_hover_transition, 0.3s ease), border-color var(--this_hover_transition, 0.3s ease);
    }
    .btn--kv {
      --this_base_width: 328px;
      .icon-arrow {
        rotate: 90deg;
      }
    }
    .btn--fix {
      --this_base_width: 280px;
      pointer-events: var(--this_toggle_btn, none);
    }
    .icon-arrow {
      display: inline-block;
      width: 1.0em;
      aspect-ratio: 1;
      color: inherit;
      background-color: currentColor;
      mask-image: url('/assets/icon_arrow_circle.svg');
      mask-position: center;
      mask-size: contain;
      mask-repeat: no-repeat;
      margin-left: 0.8em;
      margin-right: -0.2em;
    }
    @media (--hover) {
      .btn {
        &:hover {
          --this_bg: var(--color_primary);
          --this_color: var(--color_white);
          border-color: var(--this_color);
        }
      }
    }
    @media (--sp) {
      .btn {
        width: stretch;
        min-height: 58px;
        font-size: rem(16);
      }
      .btn--kv {
        --this_base_width: stretch;
      }
      .btn--fix {
        --this_bg: var(--color_primary);
        --this_color: var(--color_white);
      }
    @media (--hover) {
      .btn--fix {
        &:hover {
          color: var(--this_color);
        }
      }
    }
    }
  }
</style>
