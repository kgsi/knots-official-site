<div id="container">
  <main>
    <div class="hgroup">
      <h1 class="shuffle-text">KNOTS</h1>
      <p class="shuffle-text">Design × AI × Engineering Conference</p>
      <p class="shuffle-text">January 2026 • Tokyo, Japan</p>
      <p>
        <a
          href="https://docs.google.com/forms/d/e/1FAIpQLSengeAEwE5pfJWFBKCnw0R3i-GbHeGu1zs2isHnhnp-0EzDqw/viewform"
        >
          <span class="shuffle-text">&gt;Contact us</span>
        </a>
      </p>
    </div>
    <footer>
      <p>
        <a href="https://crossrel.jp/">CrossRel</a> /
        <a href="https://lumilinks.jp/">Lumilinks Inc.</a>
      </p>
    </footer>
  </main>
  <style>
    body {
      width: 100%;
      overflow: hidden;
      font-family:
        'Helvetica Neue', Arial, 'Hiragino Kaku Gothic ProN', 'Hiragino Sans',
        Meiryo, sans-serif;
      height: 100%;
      color: #1532f9;
    }
    main {
      display: flex;
      flex-direction: column;
      align-items: left;
      justify-content: center;
      height: 100vh;
      gap: 1rem;
      padding: clamp(1rem, 2vw, 1.5rem);
    }
    .hgroup {
      h1 {
        font-style: normal;
        font-size: clamp(5.6rem, 18vw, 10rem);
        margin: 0;
        font-weight: 200;
        line-height: 1;
        font-style: normal;
        text-indent: -0.05em;
      }
      p {
        margin: 0;
        font-family: system-ui;
        font-size: clamp(1.2rem, 2.4vw, 8rem);
      }
    }
    footer {
      p {
        font-size: clamp(1.2rem, 1.6vw, 8rem);
      }
    }
  </style>

  <script>
    import ShuffleText from 'shuffle-text'

    // DOMが読み込まれた後にShuffleTextを初期化
    document.addEventListener('DOMContentLoaded', () => {
      // .shuffle-textクラスを持つ全ての要素を取得
      const shuffleElements = document.querySelectorAll('.shuffle-text')
      const shuffleInstances: any[] = []

      // 各要素にShuffleTextを適用
      shuffleElements.forEach((element, index) => {
        const shuffleText = new ShuffleText(element as HTMLElement)
        shuffleInstances.push(shuffleText)

        // 遅延をつけて順次アニメーション開始（視覚的効果）
        setTimeout(() => {
          shuffleText.start()
        }, index * 100) // 0.3秒ずつ遅延
      })
    })
  </script>
</div>
